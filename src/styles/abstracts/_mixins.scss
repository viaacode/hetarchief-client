@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "sass:string";
@use "variables" as *;
@use "functions" as *;

@mixin text-ellipsis($block: false) {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;

	@if $block {
		display: block;
	}
}

/**
 * Button
 */

@mixin generate-button-small {
	height: $button-height-sm;
	padding: 0.9rem 2rem;
	font-size: $font-size-sm;
	font-weight: $font-weight-normal;
	line-height: $line-height-lg;
}

// makes an element twice as clickable because of bubble-up
@mixin more-clickable-element() {
	position: relative;

	&::after {
		content: "";
		inset: 0;
		position: absolute;
		transform: scale(2);
	}
}

/**
 * Inputs
 */

@mixin generate-checkbox-radio-styling($type) {
	.c-#{$type} {
		position: relative;
		display: inline-block;
		min-width: $c-check-radio-size;
		min-height: $c-check-radio-size;
		font-size: $font-size-base;
		cursor: pointer;

		&:focus-within {
			.c-#{$type}__check-icon {
				&::before {
					background-color: color.adjust($black, $alpha: -0.71);
					transform: translate(-50%, -50%) scale(3.25);
				}
			}
		}

		&:hover {
			.c-#{$type}__check-icon {
				&::before {
					background-color: color.adjust($black, $alpha: -0.86);
					transform: translate(-50%, -50%) scale(3.25);
				}
			}
		}

		&:active {
			.c-#{$type}__check-icon {
				&::before {
					background-color: color.adjust($seagreen, $alpha: -0.6);
				}
			}
		}
	}

	/**
	* Elements
	*/

	.c-#{$type}__input {
		position: absolute;
		width: 1px;
		height: 1px;
		overflow: hidden;
		white-space: nowrap;
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		opacity: 0;
	}

	.c-#{$type}__check-icon {
		position: absolute;
		top: 1px;
		left: 0;
		width: $c-check-radio-size;
		height: $c-check-radio-size;
		border: 2px solid $black;
		background-color: $white;
		color: $white;
		transition: background-color $animate-default border-color $animate-default;

		@if $type == "radio-button" {
			border-radius: 50%;
		}

		&::after,
		> span {
			opacity: 0;
			transition: opacity $timing-default linear;
		}

		&::before,
		&::after,
		> span {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
		}

		// Background hover
		&::before {
			content: "";
			z-index: get-z-layer("background");
			width: 100%;
			height: 100%;
			border-radius: 50%;
			transition: transform $animate-default;
		}

		// Radio button icon
		&::after {
			@if $type == "radio-button" {
				content: "";
			}

			z-index: get-z-layer("foreground");
			display: inline-flex;
			width: 0.6rem;
			height: 0.6rem;
			font-size: $font-size-sm;
			background-color: white;
			border-radius: 50%;
			color: $white;
		}
	}

	.c-#{$type}__label {
		display: inline-block;
		padding-left: $c-check-radio-size + 1.8rem;
	}

	/**
	* Modifiers
	*/

	.c-#{$type}--checked {
		.c-#{$type}__check-icon {
			background-color: $black;

			&::after,
			> span {
				opacity: 1;
			}
		}
	}

	.c-#{$type}--disabled {
		cursor: not-allowed;

		.c-#{$type}__check-icon {
			border-color: $zinc;

			&::before {
				content: none;
			}
		}

		&.c-#{$type}--checked {
			.c-#{$type}__check-icon {
				background-color: $zinc;
			}
		}
	}

	.c-#{$type}--no-label {
		.c-#{$type}__check-icon {
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
		}
	}
}

@mixin reset-input-field {
	border-radius: 0;
	color: $black;
	display: block;
	font-family: $font-family-primary;
	transition:
		outline-color $animate-default,
		border-color $animate-default;
	width: 100%;
}

/**
 * React Select
 */

@mixin react-select-base($_root) {
	&:not(:focus-within):hover {
		.#{$_root}__control {
			outline-color: $zinc !important;
		}
	}

	.#{$_root}__control {
		min-height: 4.8rem;
		border: 1px solid $zinc;
		border-radius: 0;
		box-shadow: none;
		outline: 1px solid transparent !important;
		transition:
			outline-color $animate-default,
			border-color $animate-default;

		&--is-focused,
		&--is-focused:hover {
			border-color: $teal;
		}
	}

	.#{$_root}__value-container {
		padding-left: $spacer-sm;
	}

	.#{$_root}__menu {
		border: 1px solid $zinc;
		border-top: none;
		margin: 0;
		border-radius: 0;
		box-shadow: none;
	}

	.#{$_root}__menu-list {
		padding: 0;
	}

	.#{$_root}__option {
		border-right: 4px solid transparent;
		color: $black;
		transition:
			background-color $animate-default,
			border-color $animate-default,
			border-right-width $animate-sm-in;

		&--is-focused,
		&--is-selected,
		&:not(&--is-selected):hover {
			background-color: color.adjust($teal, $alpha: -0.76);
		}

		&--is-selected {
			border-color: $teal;

			&.#{$_root}__option--is-focused,
			&:hover {
				border-right-width: 6px;
			}
		}
	}
}

/**
 * Tabs
 */

@mixin tabs-border-radius() {
	border-radius: math.div(math.max($tab-line-size + ($tab-vertical-padding * 2), $tab-min-height), 2);

	@media (min-width: $breakpoint-md) {
		border-radius: math.div(math.max($tab-line-size-md + ($tab-vertical-padding-md * 2), $tab-min-height-md), 2);
	}
}

/**
 * Blade
 */

@mixin blade-text-styling() {
	strong,
	p {
		font-size: $font-size-sm;
		line-height: $font-size-md;
	}

	strong {
		display: block;
		margin-bottom: $spacer-sm;
	}

	p {
		color: $neutral;
		margin-bottom: $spacer-1xl;

		@media (min-width: $breakpoint-md) {
			font-size: $font-size-base;
			line-height: $font-size-2xm;
		}
	}
}
