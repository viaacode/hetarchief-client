@use "sass:map";
@use "sass:math";
@use "styles/abstracts" as *;

$component: "c-card";

// Mixins

@mixin c-card-image-overflow {
	// Spill the image over the border if it's not padded and the card has a border
	&.#{$component}--padded-content {
		&:not(.#{$component}--edge-none) {
			.#{$component}__image-wrapper {
				margin: -$card-edge-size;
				@content;
			}
		}
	}
}

@mixin m-card-horizontal {
	flex-direction: row;

	.#{$component}__top-wrapper {
		display: flex;
	}

	.#{$component}__bottom-wrapper {
		flex-grow: 1;
		min-width: 0;
	}

	.#{$component}__image-wrapper {
		align-items: center;
		display: flex;
		flex-grow: 1;
		min-width: 0;
	}

	@include c-card-image-overflow {
		margin-right: 0;
	}

	&.#{$component}--padded-both {
		.#{$component}__image-wrapper {
			margin-bottom: $spacer-sm;
		}

		.#{$component}__title-wrapper,
		.#{$component}__subtitle-wrapper,
		.#{$component}__children-wrapper {
			margin-left: 0;
		}
	}
}

@mixin m-card-vertical {
	flex-direction: column;

	@include c-card-image-overflow {
		margin-bottom: 0;
	}
}

// Placeholders

%s-card-horizontal-whitespace {
	margin-left: $spacer-sm;
	margin-right: $spacer-sm;
}

%s-card-content-whitespace {
	// Note: I shouldn't let whitespace be influenced by color mode but this saves us a lot of className exposure
	&.#{$component}--mode-dark {
		.#{$component} {
			&__header-wrapper {
				margin-bottom: math.div($spacer-md, 2);
				margin-top: $spacer-sm;

				@include respond-at("md") {
					margin-bottom: $spacer-sm * 2;
					margin-top: $spacer-lg + $spacer-xs;
				}
			}

			&__children-wrapper {
				margin-bottom: $spacer-md;
				color: $zinc;

				@include respond-at("md") {
					margin-right: $spacer-lg;
				}
			}
		}
	}

	.#{$component} {
		&__header-wrapper {
			margin-bottom: $spacer-sm;
			margin-top: $spacer-sm;
		}

		&__title-wrapper,
		&__subtitle-wrapper,
		&__toolbar-wrapper,
		&__children-wrapper {
			@extend %s-card-horizontal-whitespace;
		}

		&__toolbar-wrapper {
			margin-left: 0;
		}

		&__children-wrapper {
			margin-bottom: $spacer-sm;
		}
	}
}

// Component

.#{$component} {
	display: flex;

	// Elements

	&__header-wrapper {
		display: flex;
		flex-flow: row nowrap;
		flex-grow: 1;
		min-width: 0;
	}

	&__title-wrapper {
		flex-grow: 1;
		min-width: 0;
		overflow-wrap: break-word;
	}

	&__toolbar-wrapper {
		flex-grow: 0;
		width: auto;
	}

	&__subtitle,
	&__children {
		&-wrapper {
			color: $neutral;
		}
	}

	// Mutators

	&--edge {
		&-zinc {
			border: $card-edge-size solid $zinc-40;
		}
	}

	&--padded {
		&-both {
			@extend %s-card-content-whitespace;

			.#{$component} {
				&__image-wrapper {
					@extend %s-card-horizontal-whitespace;

					margin-top: $spacer-sm;
				}
			}
		}

		&-content {
			@extend %s-card-content-whitespace;

			.#{$component} {
				&__title-wrapper {
					margin-left: 0;
				}
			}
		}

		&-vertical {
			.#{$component} {
				&__header-wrapper {
					margin-bottom: math.div($spacer-md, 2);
					margin-top: math.div($spacer-md, 2);

					@include respond-at("md") {
						margin-bottom: $spacer-sm;
						margin-top: $spacer-sm * 1.5;
					}
				}

				&__children-wrapper {
					margin-bottom: $spacer-sm;
				}
			}
		}
	}

	// Orientation must be below Padded
	// Only define a few responsive variants to avoid bloat
	&--orientation {
		&-horizontal {
			@include m-card-horizontal;

			&--at-md {
				@include respond-to("md") {
					@include m-card-vertical;
				}

				@include respond-at("md") {
					@include m-card-horizontal;
				}
			}
		}

		&-vertical {
			@include m-card-vertical;

			&--at-md {
				@include respond-to("md") {
					@include m-card-horizontal;
				}

				@include respond-at("md") {
					@include m-card-vertical;
				}
			}
		}
	}

	&--mode {
		&-light {
			background-color: $white;
		}

		&-dark {
			background-color: $black;

			.#{$component} {
				&__title,
				&__toolbar {
					&-wrapper {
						color: $white;
					}
				}
			}
		}
	}

	&--offset {
		margin-left: $card-offset * 0.8;
		margin-top: $card-offset * 0.8;

		&.#{$component}--orientation-horizontal {
			.#{$component} {
				&__image {
					&-wrapper {
						align-self: flex-start;
						box-shadow: $shadow-24-black-24;
						transform: translate(-($card-offset * 0.8), -($card-offset * 0.8));
					}
				}
			}
		}

		@include respond-to("md") {
			&.#{$component}--orientation-horizontal {
				.#{$component} {
					&__image {
						&-wrapper {
							margin-right: 0 - $card-offset * 0.8;
						}
					}
				}
			}
		}

		@include respond-at("md") {
			margin-left: $card-offset;
			margin-top: $card-offset;

			&.#{$component}--orientation-horizontal {
				.#{$component} {
					&__image {
						&-wrapper {
							transform: translate(-$card-offset, -$card-offset);
						}
					}
				}
			}
		}
	}

	&--shadow {
		box-shadow: $shadow-24-black-04;
	}
}
